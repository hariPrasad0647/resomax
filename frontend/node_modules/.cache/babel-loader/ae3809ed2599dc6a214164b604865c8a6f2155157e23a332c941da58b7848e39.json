{"ast":null,"code":"export const getTrips = async () => {\n  const res = await fetch(`/api/trips`);\n  if (!res.ok) throw new Error(\"Failed to fetch trips\");\n  return res.json();\n};\nexport const getBookings = async () => {\n  const res = await fetch(`/api/bookings`);\n  if (!res.ok) throw new Error(\"Failed to fetch bookings\");\n  return res.json();\n};\nexport const createBooking = async bookingData => {\n  const res = await fetch(`/api/bookings`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(bookingData)\n  });\n  if (!res.ok) throw new Error(\"Failed to create booking\");\n  return res.json();\n};\nexport const checkAvailability = async (tripId, date) => {\n  const res = await fetch(`/api/check-availability/${tripId}?date=${date}`);\n  if (!res.ok) throw new Error(\"Failed to check availability\");\n  return res.json();\n};","map":{"version":3,"names":["getTrips","res","fetch","ok","Error","json","getBookings","createBooking","bookingData","method","headers","body","JSON","stringify","checkAvailability","tripId","date"],"sources":["D:/Projects/resomax/frontend/src/api.js"],"sourcesContent":["export const getTrips = async () => {\r\n  const res = await fetch(`/api/trips`);\r\n  if (!res.ok) throw new Error(\"Failed to fetch trips\");\r\n  return res.json();\r\n};\r\n\r\nexport const getBookings = async () => {\r\n  const res = await fetch(`/api/bookings`);\r\n  if (!res.ok) throw new Error(\"Failed to fetch bookings\");\r\n  return res.json();\r\n};\r\n\r\nexport const createBooking = async (bookingData) => {\r\n  const res = await fetch(`/api/bookings`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(bookingData),\r\n  });\r\n  if (!res.ok) throw new Error(\"Failed to create booking\");\r\n  return res.json();\r\n};\r\n\r\nexport const checkAvailability = async (tripId, date) => {\r\n  const res = await fetch(`/api/check-availability/${tripId}?date=${date}`);\r\n  if (!res.ok) throw new Error(\"Failed to check availability\");\r\n  return res.json();\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;EACrC,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACrD,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAML,GAAG,GAAG,MAAMC,KAAK,CAAC,eAAe,CAAC;EACxC,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EACxD,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAOC,WAAW,IAAK;EAClD,MAAMP,GAAG,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;IACvCO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW;EAClC,CAAC,CAAC;EACF,IAAI,CAACP,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EACxD,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAMS,iBAAiB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,IAAI,KAAK;EACvD,MAAMf,GAAG,GAAG,MAAMC,KAAK,CAAC,2BAA2Ba,MAAM,SAASC,IAAI,EAAE,CAAC;EACzE,IAAI,CAACf,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}